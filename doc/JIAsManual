
glog编译参考
https://github.com/google/glog/issues/52  参考hyuce的意见

https://github.com/google/glog/issues/44  把对OS_CYGWIN的判断都注释掉。直接使用LINUX环境。


============================  分割线  =========================

TeamViewer 账号tm-wdt@gmail.com，密码facebook-WDT




技术方案：

由于wdt与facebook folly库、google开发库等开源库紧耦合，直接源代码移植到Windows系难度大，因此选择采用cygwin支持的方式。cygwin等库文件采用dll。Cygwin不支持glibc




参考https://github.com/facebook/hhvm/wiki/Building-and-Installing-HHVM-on-Cygwin




一、构建cgwin环境。需要安装wget, git, make, cmake, automake等工具。




需要openssl支持，需要libboost支持，可以通过cygwin安装程序安装。

二、编译相关库


按照wdt/build/BUILD.am文件的guidelines逐步编译。

（一）gflag库编译安装顺利。

（二）glog库问题较多。（glog支持Windows环境，那么采用cygwin环境编译还是用VS编译？）

1.获取源代码。svn checkout http://google-glog.googlecode.com/svn/trunk/ glog 需要代理才能访问google。

编译glog支持64位处理器以及实现异常处理，需要glibc或libunwind库支持，由于glibc不支持cygwin（也有某种支持方法，如采用newlib库代替），因此只能选择libunwind，需要下载源码编译。编译libunwind需要<link.h>或sys/link.h文件，尝试安装newlib库（估计编译时间很长）。遇到问题：（1）找不到stddef.h头文件。实际在/user/lib/gcc/下面的include目录下，用-I添加到编译winsup对应Makefile中。（2）cygwin-cxx.h文件中include<new>，no such file or directory。无法解决？

2.直接configure，make。遇到问题：（1）未定义GetCurrentThreadId。这是Windows环境的调用，github glog issue有人建议直接注释对OS环境判断，返回当前threadid。（2）Demangle未初始化（expected initializer error）。github issue有人建议 设置cxxflags=-fPIC参数进行编译。（-fPIC作用于编译阶段，告诉编译器产生与位置无关代码(Position-Independent Code)，  则产生的代码中，没有绝对地址，全部使用相对地址，故而代码可以被加载器加载到内存的任意位置，都可以正确的执行。）照此建议make成功。但是make install错误。（3）一些符号未定义。主要是关联OS_CYGWIN判断的一些Windows库，直接将环境判断注释即可。
3.安装成功。主要参考了github Issue44和52。能否正常运行尚不清楚。

（三）double-conversion安装顺利。

（四）需要openssl-1.x（可以直接在cygwin安装）。下载，按照wdt/build/Travis中的方式config。1.遇到不支持x86-64问题；2.遇到x86汇编码问题。./config threads shared -march=x86-64 -m32解决。-m32产生链接问题，google结果显示因为32和64环境不匹配问题。最终配置./Configure Cygwin -march=x86-64 no-asm threads shared，编译通过，make test不通过，强行安装成功。注意后续是否有问题

（五）需要gmock and gtest

三、编译wdt
1.自己编译安装找不到openssl库的位置。export OPENSSL_ROOT_DIR进行设置。


2.如果后面需要进行test，需要下载gmock和gtest，而这make顺利通过。


3.中止在svn gmock的问题。需要对gmock中cmake规则进行修改，去掉涉及download\patch\update相关的关联规则，以及调用Release_pdate的的编译语句。


4.std::to_string的问题。Error：to_string is not a member of std。问题原因是c++版本中std不支持to_string；一般可以通过增加-std=c++11指定c++编译版本解决；但经查，Cygwin不支持std::to_string(http://stackoverflow.com/questions/33500074/cygwin-g-5-2-to-string-is-not-a-member-of-std)。可参考http://stackoverflow.com/questions/12975341/to-string-is-not-a-member-of-std-says-so-g  构造一个workaround函数（遇到against undefined symbol `WinMain'）。实际：因folly/Conv.h定义to_string是判断环境为非安卓，这里注释掉相关判断，直接应用string函数。


20160223解决方案：新建wdt/patch_jia.h，内容如下（参考https://github.com/CleverRaven/Cataclysm-DDA/issues/13286）


#include <string>
#include <sstream>

namespace std
{
 template < typename T > std::string to_string( const T& n )
 {
 std::ostringstream stm ;
 stm << n ;
 return stm.str() ;
 }
}


5.ERROR: expected identifier before numeric constant FSYNC 在文件wdt/Reporting.h文件中514行。参考：http://www.51testing.com/html/42/184042-240845.html 。错误原因：FSYNC枚举常量定义可能与某个库中有冲突。重新命名为JJ_FSYNC。同时修改util/FileWriter.cpp:87。


（一）


1.自己编译安装找不到openssl库的位置。export OPENSSL_ROOT_DIR进行设置。


2.如果后面需要进行test，需要下载gmock和gtest，而这make顺利通过。


3.中止在svn gmock的问题


（二）如果在内部使用，考虑不需要SSL支持。是否可行？




